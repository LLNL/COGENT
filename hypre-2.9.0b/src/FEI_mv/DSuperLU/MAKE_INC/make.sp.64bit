############################################################################
#
#  Program:         SuperLU_DIST
#
#  Module:          make.inc
#
#  Purpose:         Top-level Definitions
#
#  Creation date:   February 4, 1999   version alpha
#
#  Modified:	    September 1, 1999  version 1.0
#                   March 15, 2003     version 2.0
#		    November 1, 2007   version 2.1
#
############################################################################
#
#  The machine (platform) identifier to append to the library names
#
PLAT		= _power5

#
#  The name of the libraries to be created/linked to
#
DSuperLUroot 	= $(HOME)/Release_Codes/SuperLU_DIST_2.2
DSUPERLULIB   	= $(DSuperLUroot)/lib/libsuperlu_dist_2.2.a
#
BLASDEF	     	= -DUSE_VENDOR_BLAS
BLASLIB      	= -lessl
METISLIB        = -L/usr/common/usg/parmetis/3.1 -lmetis
PARMETISLIB	= -L/usr/common/usg/parmetis/3.1 -lparmetis
LIBS	     	= $(DSUPERLULIB) $(BLASLIB) $(PARMETISLIB) $(METISLIB)

#
#  The archiver and the flag(s) to use when building archive (library)
#  If your system has no ranlib, set RANLIB = echo.
#
ARCH         	= ar
# 64-bit:
ARCHFLAGS    	= -X64 cr
RANLIB       	= ranlib

############################################################################
# C compiler setup
# 64-bit
CC           	= mpcc_r
# CFLAGS should be set to be the C flags that include optimization
CFLAGS          = -D_SP -qarch=pwr5 -qalias=allptrs -q64 \
		  -DDEBUGlevel=0 -DPRNTlevel=0 -O3
#
# NOOPTS should be set to be the C flags that turn off any optimization
# 64-bit
NOOPTS		= -q64

############################################################################
# FORTRAN compiler setup
# 64-bit
FORTRAN         = mpxlf90_r
FFLAGS 		= -WF,-Dsp -O3 -Q -qstrict -qfixed -qinit=f90ptr -qarch=pwr5\
                  -q64 #-qintsize=8
############################################################################
# 64-bit
LOADER	= mpxlf90_r

# 64-bit:
LOADOPTS	= -q64
############################################################################
#  C preprocessor defs for compilation (-DNoChange, -DAdd_, or -DUpCase)
#
#  Need follow the convention of how C calls a Fortran routine.
#
CDEFS        = -DNoChange
