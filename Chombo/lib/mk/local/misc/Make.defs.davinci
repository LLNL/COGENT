# -*- Mode: Makefile; Modified: "Tue 23 Aug 2005 16:56:19 by dbs"; -*-

## This file defines variables for use on the login nodes of the NERSC SGI Altix
## (Intel Itanium) computer 'davinci'.
##
## NOTE: everything is always in 64bit mode

makefiles+=local/Make.defs.davinci

# The default GNU compilers (v3.3.3) don't work with the HDF module,
# so use the Intel compilers.
CXX = icpc
FC = ifort

# There is no separate compiler for parallel, just a library.
MPICXX = $(CXX)
mpilibflags = -lmpi

# The Intel C++ and Fortran compilers are installed in separate directories,
# so we need to force the linker to find the Fortran runtime library.
ifeq ($(FC),ifort)
  syslibflags += -L$(IFC)/lib
endif

# The appropriate module must be loaded for the HDF5 library
# For serial, do    'module load hdf5'
# For parallel, do  'module load hdf5_par'

# Check that the right HDF module is loaded.
ifneq ($(USE_HDF),FALSE)
  ifeq ($(HDF5_DIR),)
    $(error The HDF5_DIR env.var. is not defined.   Did you load one of the hdf5 modules?)
  endif
  ifeq ($(MPI),TRUE)
    ifeq ($(findstring parallel,$(HDF5_DIR)),)
      $(error HDF5 directory [$(HDF5_DIR)] is not parallel but MPI is TRUE.  Did you load the right module?)
    endif
  else
    ifeq ($(findstring serial,$(HDF5_DIR)),)
      $(error HDF5 directory [$(HDF5_DIR)] is not serial but MPI is FALSE.  Did you load the right module?)
    endif
  endif
  HDFINCFLAGS=$(HDF5_INCLUDE)
  HDFLIBFLAGS=-L$(HDF5_DIR)/lib -lhdf5 -lz -lm
  # the usual NERSC module brokenness (hdf5 and hdf5_par modules have different env.vars)
  HDFMPIINCFLAGS=-I$(HDF5_DIR)/include
  HDFMPILIBFLAGS=$(HDFLIBFLAGS)
endif

# FFTW Fourier transform package
ifeq ($(findstring TRUE,$(USE_FFT) $(USE_FFTW)),TRUE)
  ifeq ($(FFTW),)
    $(error error: FFTW env.var. undefined.  Did you load a fftw module?)
  endif
  ifeq ($(findstring fftw/3,$(FFTW)),fftw/3)
    fftincflags=-DFFTW_3 $(FFTW)
    fftlibflags=$(FFTW) -lfftw3
    XTRACONFIG:=$(XTRACONFIG).fftw3
  else
    fftincflags=-DFFTW_2 $(FFTW)
    fftlibflags=$(FFTW) -lrfftw -lfftw
    XTRACONFIG:=$(XTRACONFIG).fftw2
  endif

  fftincflags+=-DFFTW_PLAN_TYPE=integer*8
endif

# Intel math library
ifneq ($(MKL),)
  syslibflags += $(MKL)
endif

# abort if the user tries to build for 32 bits
USE_64=TRUE
ifeq ($(USE_64),FALSE)
  $(error All programs on davinci are 64bit so you cannot set USE_64=FALSE)
endif
