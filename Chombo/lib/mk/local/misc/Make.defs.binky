# -*- Mode: Makefile; Modified: "Thu 21 Aug 2003 18:11:51 by dbs"; -*-

# Copy this file to:
#
#    Chombo/lib/mk/Make.defs.local
#
# before modifying it.
#
# Use this file to set Chombo makefile variables for the local
# installation.  To set variables for just a single computer
# create a file named:
#
#    Chombo/lib/mk/local/Make.defs.<hostname>
#
# where <hostname> is the value of `uname -n` (or `hostname`, if uname doesn't work)

# The default values for the main variables here are in:
#
#    Chombo/lib/mk/Make.defs.defaults

# This file is include'd from Make.defs after:
#    Make.defs.defaults
# and before:
#    Make.defs.<hostname> Make.defs.config Make.rules

makefiles+=local/Make.defs.binky

################################################################

# Chombo configuration variables:

#  DIM          :(2,3) number of dimensions in PDEs
#  DEBUG        :(TRUE,FALSE) compile for debugging if TRUE, else for optimizing
#  OPT          :(TRUE,HIGH,FALSE) compile optimized, highly optimized, or not
#  PRECISION    :(FLOAT,DOUBLE) size of floating point variables
#  PROFILE      :(TRUE,FALSE) compile for performance profiling or not
#  USE_SETVAL   :(TRUE,FALSE) use setVal in initialize all BaseFab<Real>
#  CXX          : command to compile/link C++ code
#  FC           : command to compile Fortran code
#  MPI          :(TRUE,FALSE) compile for parallel if TRUE, else serial
#  MPICXX       : command to compile/link C++ code in parallel
#  OBJMODEL     : special config for non-default compiler mode
#  XTRACONFIG   : user-defined special config

# These variables are system-dependent:

#  HDFINCFLAGS    : cpp options (-I*) for HDF5 include files
#  HDFLIBFLAGS    : link options (-L* -l*) for HDF5 library files
#  HDFMPIINCFLAGS : cpp options (-I*) for parallel HDF5 include files
#  HDFMPILIBFLAGS : link options (-L* -l*) for parallel HDF5 library files

# These variables are system-dependent but usually dont have to be changed:

#  CH_AR    : command to add object files to a library file
#  CH_CPP   : command to run the C preprocessor on Fortran files
#  DOXYGEN  : command to run the 'doyxgen' program
#  EMT      : CPP option to enable the memory tracking feature in the Chombo code
#           :    (set the variable to blank to disable this feature)
#  LD       : command to run the linker (default: use $CXX or $MPICXX, as appropriate)
#  PERL     : command to run perl
#  RANLIB   : command to post-process a library archive for random access

# Compiler variables.  The 'Make.rules' file chooses whether to use
# the 'opt' flags or the 'dbg' flags.  The 'prof' flags are added if
# PROFILE=TRUE.
#
#  cppdbgflags : debug options for the C-preprocessor (both C++ and Fortran)
#  cppoptflags : optimization options for the C-preprocessor (")
#  cxxcppflags : C-preprocessor flags for C++ compiles only
#  cxxdbgflags : debug options for the C++ and MPIC++ compilers
#  cxxoptflags : optimization options for the C++ and MPIC++ compilers
#  cxxprofflags: profiling options for the C++ and MPIC++ compilers
#  fcppflags   : C-preprocessor flags for Fortran compiles only
#  fdbgflags   : debug options for the Fortran compiler
#  foptflags   : optimization options for the Fortran compiler
#  fprofflags  : profiling options for the Fortran compiler
#  lddbgflags  : debug options for the linker
#  ldoptflags  : optimization options for the linker
#  ldprofflags : profiling options for the linker
#  flibflags   : options for the linker to specify the Fortran libraries
#                (this usually is needed only when mixing C++ and
#                 Fortran compilers from different vendors)
# Notes:
# 1) The linker command always uses the CXX options in addition to its own variables,
#    so options that are common to both do not need to be repeated in the ld*flags vars
#    (e.g. -g for debugging, or -pg for profiling)
# 2) The compiler options can be set on the command line using the
#    variables: CPPFLAGS CXXFLAGS FFLAGS LDFLAGS.
#    These variables supercede any settings in the makefiles.
# 3) The GNUmakefile in "Chombo/lib" will check these variables and complain if
#    they have invalid values.  On systems that don't have MPI installed, the
#    various MPI variables should not be set (or should be set to empty strings)
#    to prevent the checker from complaining.

#begin  -- dont change this line

## Override the default values here
DIM           = 2
DEBUG         = FALSE
OPT           = TRUE
PRECISION     = DOUBLE
PROFILE       = FALSE
CXX           = g++
FC            = g77
MPI           = FALSE
USE_64        = TRUE
## Note: don't set the MPICXX variable if you don't have MPI installed
#MPICXX        = /usr/local/bin/mpiCC
#MPICXX = g++
#OBJMODEL      =
#XTRACONFIG    =
HDFINCFLAGS   = -I/usr/local/src/hdf5-1.6.4-single/hdf5/include
HDFLIBFLAGS   = -L/usr/local/src/hdf5-1.6.4-single/hdf5/lib -lhdf5
## Note: don't set the HDFMPI* variables if you don't have parallel HDF installed
#HDFMPIINCFLAGS= -I/usr/local/hdf5-parallel/include
#HDFMPILIBFLAGS= -L/usr/local/hdf5-parallel/lib -lhdf5 -lz -L/usr/local/lib -lmpich
#CH_AR         =
#CH_CPP        =
#DOXYGEN       =
#EMT           =
#LD            =
#PERL          =
#RANLIB        =
#cppdbgflags   =
#cppoptflags   =
#cxxcppflags   =
#cxxdbgflags   =
#cxxoptflags   =
#cxxprofflags  =
#fcppflags     =
#fdbgflags     =
#foptflags     =
#fprofflags    =
#flibflags     =
#lddbgflags    =
#ldoptflags    =
#ldprofflags   =
 
#end  -- dont change this line
