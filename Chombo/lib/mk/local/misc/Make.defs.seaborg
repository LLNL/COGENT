# -*- Mode: Makefile; Modified: "Tue 11 Apr 2006 16:58:53 by dbs"; -*-

## This file defines variables for use on the login nodes of the NERSC SP 'seaborg'.
## It should be symlink'd to Make.defs.<name>, where <name> is name of one of the
## login nodes (s005xx and s006xx)

makefiles+=local/Make.defs.seaborg

CXX=xlC
FC=xlf
MPICXX=mpCC

# The appropriate 'module' must be loaded for this to work.
# For serial, do    'module load hdf5'
# For parallel, do  'module load hdf5_par'
# To use the 64bit compilation model of xlC/xlf, you should set USE_64=TRUE and:
#  for serial, do   'module load hdf5_64'
#  for parallel, do 'module load hdf5_par_64'

ifneq ($(USE_HDF),FALSE)
  # The NERSC HDF5 modules use different variables in different HDF versions (not smart)
  #[NOTE: the HDF5C variable in some of the modules has options that don't compile Chombo]
  HDFINCFLAGS=$(HDF5)
  HDFMPIINCFLAGS=$(HDF5)
  ifeq ($(HDF5_LIB),)
    HDFLIBFLAGS=$(HDF5)
    HDFMPILIBFLAGS=$(HDF5)
  else
    HDFLIBFLAGS=$(HDF5_LIB)
    HDFMPILIBFLAGS=$(HDF5_LIB)
  endif
endif

# Check that the right HDF module is loaded.
ifneq ($(USE_HDF),FALSE)
  ifeq ($(MPI),TRUE)
    ifeq ($(findstring parallel,$(HDF5_DIR)),)
      $(error HDF5 directory [$(HDF5_DIR)] is not parallel but MPI is TRUE.  Did you load the right module?)
    endif
  else
    ifeq ($(findstring serial,$(HDF5_DIR)),)
      $(error HDF5 directory [$(HDF5_DIR)] is not serial but MPI is FALSE.  Did you load the right module?)
    endif
    ifeq ($(USE_64),TRUE)
      ifneq ($(findstring 64,$(HDF5_DIR)),64)
        $(error compiling in 64bit mode, but HDF5 directory is not 64bit.  Did you load the right module?)
      endif
    endif
  endif
endif

ifeq ($(USE_FFTW),TRUE)
  ifeq ($(FFTW_ROOT),)
    $(error error: FFTW_ROOT env.var. undefined.  Did you load a fftw module?)
  endif
  FFTWDIR := $(patsubst -I%/include,%,$(filter -I$(FFTW_ROOT)/%/include,$(FFTW)))
  # fftw modules on seaborg are compiled without -qextname
  USE_EXTNAME   = FALSE
  foptflags    := $(filter-out -qextname,$(deffoptflags))
  fdbgflags    := $(filter-out -qextname,$(deffdbgflags))
  cppcallsfort := -DCH_FORT_NOUNDERSCORE
endif

# This variable is used to run programs in Make.rules
#[NOTE: this overrides the default setting in Make.defs. <dbs>]
ifeq ($(RUN),)
  ifeq ($(MPI),TRUE)
    RUN = poe ./#
    RUNFLAGS =  -procs 2 -nodes 1
  endif
endif

# the login computers on seaborg have different names, so make
# symlinks to this file for each computer name
#[NOTE: assumes current directory is 'mk/local'
_hostname = seaborg
symlinks:
	$(QUIET)./symlinks.$(_hostname)
