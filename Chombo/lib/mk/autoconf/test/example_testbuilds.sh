#!/bin/sh

#
# Using autogenerated (by ./make_example_metamakefiles.py) configure.in's and Makefile.am's,
# we should be able to build in the following directories under ./example:
EXAMPLE_DIRS="EBAdvect EBAMRPoisson EBAMRINS OldAMRGodunov/Split AMRWaveEqn AMRUpwind EBMenagerie RichardsonAMRPoisson"

# Make sure this is correct.  If you build another one, make sure EB and MF are
# on, as most of the examples use EB (if not MF as well).
CHOMBO_INSTALLDIR=$HOME/Chombo/my-cvsroot/automakefiled_examples2/builds/DIM_3.USE_EB_TRUE.USE_MF_TRUE/install
export CHOMBO_INSTALLDIR

cd `dirname $0`/../../../..

for d in $EXAMPLE_DIRS; do
    echo "@@ Doing example/$d @@"

    cd example/$d
    if test -f Makefile; then make distclean; fi
    if test -d install; then rm -rf install; fi
    cp -f ../../zap .; ./zap
    rm -f `find . -name Makefile.am`
    rm -f `find . -name Makefile.in`
    rm -f `find . -name Makefile`

    cd ../..
    python ./lib/mk/autoconf/make_example_metamakefiles.py example/$d
    
    cd example/$d
    ./configure --prefix=`pwd`/install DIM=3
    make -j4 install
    if test $? -ne 0; then echo "@@ Failed in $d @@"; exit 1; fi

    # Try for one out-of-source build from dist
    ## Doesn't work, because bootstrap installs depcomp in .. (!)
    if test $d = EBAdvect; then
        echo "@@ Doing out-of-source build from dist of example/$d @@"
        make dist
        if test $? -ne 0; then echo "@@ Failed to make dist of $d @@"; exit 1; fi
        VERSION=`grep AM_INIT_AUTOMAKE configure.in | cut -d, -f2 | awk '{print $1}'`        
        tar xvfz ${d}-${VERSION}.tar.gz
        mkdir -p ${d}-${VERSION}/outofsource
        cd ${d}-${VERSION}/outofsource
        ../configure --prefix=`pwd`/install DIM=3
        if test $? -ne 0; then echo "@@ Failed to configure outofsource $d @@"; exit 1; fi
        make -j4 install
        if test $? -ne 0; then echo "@@ Failed out-of-source build from dist of $d @@"; exit 1; fi
        cd ../..
    fi

    cd ../..
done


#########
# Notes #
#########

# The following are directories we can't build:
#  
# **name**              **reason**
# AMRSelfGravity        anag/trunk doesn't have GNUmakefile anyway
# AMRGodunov            Multiple headers sharing the same file name
# OldAMRGodunov/Unsplit "
# AMRNodeElliptic       "
# AMROpacity            anag/trunk doesn't build either -- API misuse
# AMRClaw               Lots of native Fortran (.h files)
# EBAMRNS               Isn't supposed to build in 3D at all.  In 2D, runs afoul of
#                         global getCoarserLayouts function which is defined two different
#                         ways in EBAMRNS/src.
