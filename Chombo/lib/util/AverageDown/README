The averagedown code reads in HDF5 plotfiles and makes use of the 
CoarseAverage class provided in Chombo/lib/src/AMRTools to average 
finely resolved data (on one or more levels) down to coarsely 
resolved data.  More precisely, the code reads in fine and coarse 
HDF5 plotfiles, averages the fine data down to the coarse grids, 
and outputs a new plotfile for the averaged down data.

These two data sets which are read in must have the same ProblemDomain.  
If the data sets have multiple levels, the corresponding finely and 
coarsely resolved levels must occupy the same physical space.  

Once the fine data is averaged down, one can use ChomboCompare to 
compare the coarse data and the averaged down data, and thus estimate 
the rate of convergence of the code that generated the data sets.  


COMPILATION:

The averagedown code is compiled in the same way as other Chombo 
executables:in the ChomboCompare directory, gmake averagedown 
[DIM=<spacedim>,DEBUG=<TRUE,FALSE>, etc] where the brackets contain 
optional compilationflags.  The result of compilation is an executable

averagedown[DIM]d.<compilation-specific string>.ex


EXECUTION:

Execution is driven by an inputs file.  Usage is:

        averagedown<>.ex <inputsFile>

Sample inputs files provided with the code are "inputs.avedown" and 
"inputs.avedown.timeDep", which compare asingle set of files and a 
series of files, respectively.


INPUT FILE FORMAT:

The inputs file format uses the same inputs file format as other Chombo
codes.  In this case, inputs to the compare code require the prefix
"avedown." to be recognized by the inputs file parser.


REQUIRED INPUTS:
Required inputs for the averagedown code are as follows:

avedown.fineRoot = <filename> -- filename root for fine solution
  (single-level fine solution). 

avedown.crseRoot = <filename> -- filename root for coarse solution

avedown.aveDownRoot = <filename> -- this is the filename for the plotfile 
    into which the averaged down data is written (which may then be viewed 
    with VisIt)

If "isTimeDep" is 0 (the default) then the filename roots are taken to be
the filenames to be used, without modification. In time-dependent mode, the
filename roots are used as roots to construct the relevant filenames, as
described below in the section on time-dependent mode.


OPTIONAL ARGUMENTS:
Also, there are a number of optional arguments, including:

avedown.aveDownVars = <list of plotfile components> -- names of variables
    for which to compute the error.  If the argument isn't present
    then the intersection of the variables in the two files being
    compared is used for "avedown.aveDownVars".  It is an error for the
    argument to be present but have no component names.


TIME-DEPENDENT MODE:

The averagedown code can also be used to evaluate a series of plotfiles in a
time-dependent sense.  L1, L2, and MaxNorms are generated for each
comparable time step, as well as error plotfiles if the "doPlots"
input is set to 1.

avedown.isTimeDep = <integer> -- if isTimeDep is 1, then the averagedown code
    will look for and avedown a (time) series of HDF5 plotfiles.

avedown.numCrseStart = <integer> -- the time step of the first coarse
    solution.  See below for an example.

avedown.numCrseFinish = <integer> -- the time step of the last coarse
    solution.  See below for an example.

avedown.crseStep = <integer> -- the number of time steps between successive 
    coarse solutions.  See below for an example.

avedown.mult = <integer> -- The number of fine timesteps which take
    place during a coarse solution timestep -- (so, for example,
    if the mult variable is set to 4, then the code will assume that
    there are 4 fine solution timesteps for every coarse
    solution timestep.  In this case, coarse solutions at step
    0,1,2,3 correspond to fine solutions at steps 0,4,8,12.  See
    below for a complete example.

avedown.intFieldSize = <integer> the size of the integer plotfile
    number in the plotfile names.  This is used along with the
    filename roots to construct the sequence of filenames used for
    the aveDown computation.  The default value for intFieldSize is 4.

Currently, in the time-dependent mode plotfile names are constructed
starting with the "roots" given above.  Then the "time step" is appended to
this as a <intFieldSize> digit field with leading zeros.  Finally
"2d.hdf5" or "3d.hdf5" is appended (depending on the dimension of the code
being run).

For example, if the "crseRoot" is "approxTimeSoln.", "isTimeDep" is 1,
"numCrseStart" is 0, "numCrseFinish" is 10, "crseStep" is 2,
"intFieldSize" is 4, and the averagedown code being run is 2d then the
coarse solution filenames generated and used for the series are:

        crseTimeSoln.0000.2d.hdf5
        crseTimeSoln.0002.2d.hdf5
        crseTimeSoln.0004.2d.hdf5
        crseTimeSoln.0006.2d.hdf5
        crseTimeSoln.0008.2d.hdf5
        crseTimeSoln.0010.2d.hdf5

Further if "fineRoot" is "fineTimeSoln." and "mult" is 16, then the above
files are compared to the following files (first to first, second to
second, etc.):

        fineTimeSoln.0000.2d.hdf5
        fineTimeSoln.0032.2d.hdf5
        fineTimeSoln.0064.2d.hdf5
        fineTimeSoln.0096.2d.hdf5
        fineTimeSoln.0128.2d.hdf5
        fineTimeSoln.0160.2d.hdf5
