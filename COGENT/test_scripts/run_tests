#!/bin/bash

# This script tests one or more problems against results in a baseline 
# directory.  It is invoked by listing the names of the test problems
# (enclosed by single quotes unless there's only one name) on the command
# line, e.g.,
#
#    run_tests 'gam_3 DIIID_coarse single_null_old'
#
# The results are placed in a subdirectory of the user-specified results directory,
# in a subdirectory named by a date/time stamp corresponding to when this script
# was executed.
#
# N.B.: This script is specifically intended to submit jobs to the interactive
# (e.g., pdebug) partition of a machine scheduled by the SLURM job scheduler
# using srun.  To submit batch jobs on such systems, use the run_batch script instead.
# Use of this script on a system with a different job scheduler will require
# replacement "srun" with the appropriate analog.
# 
########################################################################################
# CONFIGURATION PARAMETER SECTION

# Leave these settings commented out to read them from your environment;
# otherwise, uncomment them and set them, which will also override any
# corresponding environment variables.

# COGENT root directory
#COGENT_TEST_COGENT_DIR=

# Chombo root directory
#COGENT_TEST_CHOMBO_DIR=

# Test results directory
#COGENT_TEST_RESULTS_DIR=

# Baseline directory
#COGENT_TEST_BASELINES_DIR=

# Tolerance
#COGENT_TEST_TOLERANCE=1.e-15

########################################################################################

: ${COGENT_TEST_COGENT_DIR:?"Please set COGENT_TEST_COGENT_DIR in your environment or manually above"}
: ${COGENT_TEST_CHOMBO_DIR:?"Please set COGENT_TEST_CHOMBO_DIR in your environment or manually above"}
: ${COGENT_TEST_RESULTS_DIR:?"Please set COGENT_TEST_RESULTS_DIR in your environment or manually above"}
: ${COGENT_TEST_BASELINES_DIR:?"Please set COGENT_TEST_BASELINES_DIR in your environment or manually above"}
: ${COGENT_TEST_TOLERANCE:?"Please set COGENT_TEST_TOLERANCE in your environment or manually above"}

# Location of h5diff
diff_prog=$(which h5diff)

# Get the COGENT executable name
pushd $COGENT_TEST_COGENT_DIR/exec > /dev/null
cogent_executable=`ls cogent.*.ex`
popd > /dev/null

# Make the directory to hold the test results if it's not already there
if [ ! -d $COGENT_TEST_RESULTS_DIR ]; then
   mkdir $COGENT_TEST_RESULTS_DIR
fi
cd $COGENT_TEST_RESULTS_DIR

# Use the current date and time to name a subdirectory that will contain
# the results of this script run.  Replace spaces with underbars to construct
# a safer directory name.  Replace colons with periods, since some Visit
# mapped grid scripts can't handle directory names containing them.
test_outputs=`date | sed -e 's/ /_/g' -e 's/:/./g'`
rm -rf $test_outputs
mkdir $test_outputs
cd $test_outputs

# Loop over the test problems
for prob_dir in $1; do

   # Copy the baseline; determine the number of processors and timelimit
   mkdir $prob_dir
   cp -r $COGENT_TEST_BASELINES_DIR/$prob_dir/* $prob_dir
   cd $prob_dir
   rm -rf plt* stdout report
   input_file=$prob_dir.in
   np=`grep TEST $input_file | sed -e 's/.*\(np=\)/\1/' -e 's/\(,\).*//' -e 's/np=//'`

   # Submit the run
   echo Running test problem $prob_dir on $np processors
   srun -n$np -ppdebug $COGENT_TEST_COGENT_DIR/exec/$cogent_executable $input_file >& stdout
   cd ..
done

echo Checking results

# Loop over test problems again and check them
for prob_dir in $1; do
   if [ -d "$prob_dir" ]; then
      echo ------------------------------------------------------------------------------- >> report
      $COGENT_TEST_COGENT_DIR/test_scripts/check_problem $prob_dir $COGENT_TEST_COGENT_DIR $COGENT_TEST_CHOMBO_DIR $COGENT_TEST_BASELINES_DIR $diff_prog $COGENT_TEST_TOLERANCE >> report
   fi
done
echo ------------------------------------------------------------------------------- >> report

# Email the results
mail -s "COGENT test results" $USER < report

