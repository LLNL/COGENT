############################################################################
#
#  Program:         SuperLU_DIST
#
#  Module:          make.inc
#
#  Purpose:         Top-level Definitions
#
#  Creation date:   February 4, 1997  version alpha
#
#  Modified:	    September 1, 1999  version 1.0
#		    November 1, 2007   version 2.1
#
############################################################################
#
#  The machine (platform) identifier to append to the library names
#
PLAT		= _t3e

#
#  The name of the libraries to be created/linked to
#
DSuperLUroot 	= $(HOME)/SuperLU_DIST_2.2
DSUPERLULIB   	= $(DSuperLUroot)/lib/libsuperlu_dist_2.2.a
#
BLASDEF	     	= -DUSE_VENDOR_BLAS
#
#PERFLIB	= -l pat pat.cld
#PERFLIB	= -lapp
METISLIB	=
PARMETISLIB	=
LIBS            = $(DSUPERLULIB) $(BLASLIB) $(PARMETISLIB) $(METISLIB)

#
#  The archiver and the flag(s) to use when building archive (library)
#  If your system has no ranlib, set RANLIB = echo.
#
ARCH         	= ar
ARCHFLAGS    	= cr
RANLIB       	= ranlib

############################################################################
# C compiler setup
CC           	= cc
# CFLAGS should be set to be the C flags that include optimization
#CFLAGS       	= -D_CRAY -DPRNTlevel=1 -O3 -h aggress,split,unroll
CFLAGS       	= -O3 -D_CRAY -DPRNTlevel=0 -DDEBUGlevel=0 -DPROFlevel=0
#		  -happrentice,inline0
PTROPT	     	= -h restrict=a
#
# NOOPTS should be set to be the C flags that turn off any optimization
# This must be enforced to compile the two routines: slamch.c and dlamch.c.
NOOPTS		=
############################################################################
# FORTRAN compiler setup
FORTRAN		= f90
FFLAGS		= -O3 -dp -i 32
############################################################################
LOADER       	= cc
LOADOPTS   = 
#
############################################################################
#  C preprocessor defs for compilation (-DNoChange, -DAdd_, or -DUpCase)
#
#  Need follow the convention of how C calls a Fortran routine.
#
CDEFS        = -DUpCase

