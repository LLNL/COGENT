# This file is needed by Chombo.  It should be copied to Chombo/lib/mk.

# -*- Mode: Makefile; Modified: "Thu 06 Apr 2006 14:17:29 by dbs"; -*-

## Chombo version 1.5

## Define default values for the user-visible variables.
##
## Defintions of variables:
##
## Configuration variables that affect the .a and .ex filenames:
##  DIM             number of dimensions in the simulation (2 or 3)
##  DEBUG           compile with symbol table or not (TRUE or FALSE)
##  OPT             normal optimize, high optimize, or not (TRUE, HIGH, or FALSE)
##  PRECISION       size of floating point variables (SINGLE or DOUBLE)
##  PROFILE         compile for performance profiling or not (TRUE or FALSE)
##  CXX             command to compile C++ code and link programs
##  FC              command to compile Fortran code
##  MPI             compile for parallel (TRUE or FALSE)
##  MPICXX          command to compile C++ code and link programs for parallel execution
##                   (note: blank means no parallel build is defined)
##  XTRACONFIG      user-defined addition to config string in all filenames
##
## Optional variables that don't affect the filenames:
##  CPPFLAGS        options for C preprocessor for both C++ and Fortran code
##  CHFFLAGS        options for the ChomboFortran (ChF) preprocessor (try -d for debug)
##  CXXFLAGS        options for compiling C++ code
##  FFLAGS          options for compiling Fortran code
##  LDFLAGS         options for linking
##  USE_64          if TRUE, use 64bit pointers on systems where 32bits is the default
##  USE_COMPLEX     if TRUE, enable the 'Complex' type
##                   (default is TRUE, disable only if compiler doesn't allow it)
##  USE_EB          if TRUE, build Chombo Embedded Boundary code
##  USE_HDF         if TRUE, use the HDF5 library
##   HDFINCFLAGS     cpp options (-I*) for HDF5 include files
##   HDFLIBFLAGS     link options (-L* -l*) for HDF5 library files
##   HDFMPIINCFLAGS  cpp options (-I*) for parallel HDF5 include files
##   HDFMPILIBFLAGS  link options (-L* -l*) for parallel HDF5 library files
##  USE_FFTW        if TRUE, use the FFTW library to build InfiniteDomain
##   FFTWDIR         path to parent directory of FFTW "include" and "lib" subdirs
##  USE_MF          if TRUE, build Chombo MultiFluid code (implies USE_EB=TRUE)
##  USE_MT          if TRUE, enable Chombo memory tracking
##  USE_SETVAL      if TRUE, initialize all BaseFab<Real>s to special values
##                   (this is TRUE by default unless OPT=HIGH)
##  USE_TIMER       enables use of Chombo::Timer's
##  ECHO            controls verbosity of the 'make' process:
##                    =@ for default verbosity (most compile commands, but not all)
##                    =<blank> for all commands
##  QUIET           controls verbosity of the 'make' process:
##                    =<blank> for default
##                    =@ for no output except warnings and errors and 'make' msgs.
##
## Other variables that usually don't need to be redefined:
##  AR       command to add object files to a library file (default: ar r)
##  CPP      command to run the C preprocessor on Fortran files (default: $CXX -E -P)
##  DOXYGEN  command to run the 'doyxgen' program (default: doxygen)
##  LD       command to run the linker (default is to use $CXX or $MPICXX, as appropriate)
##  PERL     command to run perl (default: perl)
##  RANLIB   command to post-process a library archive for random access (default: ranlib)
##  PROF     command to generate performanace profile for $PROFILE=TRUE

################################################################################
gnu_dir=/usr/local/tools/mvapich2-gnu-2.1
# vars affecting the configuration string
DIM=3
DEBUG=FALSE
OPT=FALSE
PRECISION=DOUBLE
PROFILE=FALSE
MPI=TRUE
CXX=MASTER_CXX
FC=MASTER_FC
# Note: if MPI=TRUE, MPICXX is used to compile but CXX is used to
#       determine the type of the base C++ compiler
MPICXX=MASTER_MPICXX
XTRACONFIG=

#cxxcppflags = -std=c++0x

# main compiler/linker options
CPPFLAGS= 
CXXFLAGS=
CHFFLAGS=
FFLAGS=
LDFLAGS=
XTRALIBFLAGS+= -llapack  -lblas

# Chombo optional features
USE_64=TRUE#        #64bit pointers
USE_MT=TRUE#         #memory tracking
# USE_SETVAL=TRUE#     #initialize FAB data
USE_COMPLEX=TRUE#    #type for complex numbers
USE_TIMER=TRUE#      #Chombo::Timer

USE_HDF=TRUE#        #HDF5 file i/o
ifeq ($(USE_HDF),TRUE)
HDF5_SERIAL_ROOT=MASTER_HDF5_SERIAL_DIR
HDF5_PARALLEL_ROOT=MASTER_HDF5_PARALLEL_DIR
HDFINCFLAGS=-I$(HDF5_SERIAL_ROOT)/include
HDFLIBFLAGS=-L$(HDF5_SERIAL_ROOT)/lib -lhdf5 -lz
HDFMPIINCFLAGS=-I$(HDF5_PARALLEL_ROOT)/include
HDFMPILIBFLAGS=-L$(HDF5_PARALLEL_ROOT)/lib -lhdf5 -lz
ifeq ($(MPI),TRUE)
XTRALIBFLAGS+=-Wl,-rpath,$(HDF5_PARALLEL_ROOT)/lib
else
XTRALIBFLAGS+=-Wl,-rpath,$(HDF5_SERIAL_ROOT)/lib
endif
endif


USE_LAPACK=TRUE#

USE_FFTW=FALSE#      #use FFTW library in $(FFTWDIR)/{include,lib}
FFTWDIR=

ifeq ($(USE_MF),TRUE)
  export USE_EB=TRUE
  export USE_MF
endif

# makefile control variables
ECHO=@#  #set this to null on the command line to increase verbosity
QUIET=#  #set this to @ on the command line to decrease verbosity

# these usually can be used without change
AR=ar r
CPP=$(CXX) -E -P
DOXYGEN=doxygen
# Note: if $(LD) is blank, $(CXX) or $(MPICXX) is used to link
LD=mpicxx
PERL=perl
RANLIB=ranlib#  #set this to 'echo' for systems that dont have ranlib
PROF=gprof

